# Setting to true produces cleaner resource names
cleanPrometheusOperatorObjectNames: true


defaultRules:
  rules:
    kubeControllerManager: true
    kubeProxy: true
    kubeSchedulerAlerting: true
    kubeSchedulerRecording: true
    etcd: true

kubeControllerManager:
  enabled: true
  serviceMonitor:
    https: true
    insecureSkipVerify: true

kubeProxy:
  enabled: true
  serviceMonitor:
    https: true
    insecureSkipVerify: true

kubeScheduler:
  enabled: true
  serviceMonitor:
    https: true
    insecureSkipVerify: true
    
kubeEtcd:
  enabled: true

coreDns:
  enabled: true

kubelet:
  serviceMonitor:
    https: true
    insecureSkipVerify: true

prometheus:
  prometheusSpec:
    resources:
      requests:
        cpu: 200m
        memory: "1.4Gi"

    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: longhorn
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi

    serviceMonitorSelectorNilUsesHelmValues: false

    serviceMonitorNamespaceSelector:
      matchLabels:
        prometheus: enabled

    ruleSelectorNilUsesHelmValues: false
    ruleNamespaceSelector:
      matchLabels:
        kubernetes.io/metadata.name: "monitoring"

    scrapeConfigSelectorNilUsesHelmValues: false

    scrapeConfigSelector: {}

    enableRemoteWriteReceiver: true

    retention: 30d

prometheusOperator:
  resources:
    requests:
      cpu: 100m
      memory: 100Mi

kube-state-metrics:
  resources:
    requests:
      cpu: 10m
      memory: 32Mi

prometheus-node-exporter:
  resources:
    requests:
      cpu: 50m
      memory: 100Mi
